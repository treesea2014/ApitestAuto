<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="ApiTest" duration-ms="43404" started-at="2015-08-31T11:18:36Z" finished-at="2015-08-31T11:19:19Z">
    <groups>
    </groups>
    <test name="ApiTest" duration-ms="43404" started-at="2015-08-31T11:18:36Z" finished-at="2015-08-31T11:19:19Z">
      <class name="com.kaikeba.server.api.utils.HTTPRequestTest">
        <test-method status="PASS" signature="initDataPath(java.lang.String, java.lang.String)[pri:0, instance:com.kaikeba.server.api.utils.HTTPRequestTest@7fc229ab]" name="initDataPath" is-config="true" duration-ms="7" started-at="2015-08-31T19:18:36Z" finished-at="2015-08-31T19:18:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[requestdata.xls]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[input]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDataPath -->
        <test-method status="FAIL" signature="run(java.lang.String, com.gxb.server.api.beans.InputData)[pri:0, instance:com.kaikeba.server.api.utils.HTTPRequestTest@7fc229ab]" name="run" duration-ms="43191" started-at="2015-08-31T19:18:36Z" data-provider="iterator" finished-at="2015-08-31T19:19:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[InputData [ID=4.0, testCase=4.0, description=4.0, host=http://w-api-f1.kaikeba.cn, callSuff=/quizzes/1683/quiz_questions?access_token=24a7b17982d28e8b35527108946dab17, callType=POST, authScheme= , authCreds= , accept= , contentType=application/json;charset=utf-8, body={
    "context_id": 1,
    "context_type": "Course",
    "points_possible": 2.0,
    "question_type": "multiple_choice",
    "name":"测验题",
    "question_name":"ceshi",
    "question_text":"xxxxxxx",
    "correct_comments":null,
    "neutral_comments":null,
    "incorrect_comments":null,
    "level":"low",
    "quiz_id":1683,
    "question_data":null,
    "required":false,
    "video_time_node":111111,
    "position":null,
    "status":null,
    
    "answers":[{
        "text": "答案一", 
        "comments":"cccc",
        "correct": true,
        "weight": 0.2,
        "position":null,
        "status":null
    },{
        "text": "答案2", 
        "comments":"cccc",
        "correct": true,
        "weight": 0.2,
        "position":null,
        "status":null
    }]
}, ActualResponse={"code":400,"message":"Unable to process JSON","details":null}, ExpectResponse={
  "status": true,
  "message": "success",
  "data": {
    "id": 44981,
    "context_id": 1,
    "context_type": "Course",
    "points_possible": 2,
    "question_type": "multiple_choice",
    "name": "测验题",
    "question_name": "ceshi",
    "question_text": "xxxxxxx",
    "correct_comments": null,
    "neutral_comments": null,
    "incorrect_comments": null,
    "level": "low",
    "quiz_id": 1683,
    "quiz_group_id": 2464,
    "question_data": null,
    "required": false,
    "video_time_node": 111111,
    "position": null,
    "status": null,
    "created_at": 1441000758778,
    "updated_at": 1441000758778,
    "is_deleted": null,
    "answers": null
  }
}, log= , IsPass=failed]]]>
              </value>
            </param>
          </params>
          <exception class="net.sf.json.JSONException">
            <message>
              <![CDATA[Missing value. at character 223 of {
    "context_id": 1,
    "context_type": "Course",
    "points_possible": 2.0,
    "question_type": "multiple_choice",
    "name":"测验题",
    "question_name":"ceshi",
    "question_text":"xxxxxxx",
    "correct_comments": ,
    "neutral_comments": ,
    "incorrect_comments": ,
    "level":"low",
    "quiz_id":1683,
    "question_data": ,
    "required":false,
    "video_time_node":111111,
    "position": ,
    "status": ,
    
    "answers":[{
        "text": "答案一", 
        "comments":"cccc",
        "correct": true,
        "weight": 0.2,
        "position": ,
        "status": 
    },{
        "text": "答案2", 
        "comments":"cccc",
        "correct": true,
        "weight": 0.2,
        "position": ,
        "status": 
    }]
}]]>
            </message>
            <full-stacktrace>
              <![CDATA[net.sf.json.JSONException: Missing value. at character 223 of {
    "context_id": 1,
    "context_type": "Course",
    "points_possible": 2.0,
    "question_type": "multiple_choice",
    "name":"测验题",
    "question_name":"ceshi",
    "question_text":"xxxxxxx",
    "correct_comments": ,
    "neutral_comments": ,
    "incorrect_comments": ,
    "level":"low",
    "quiz_id":1683,
    "question_data": ,
    "required":false,
    "video_time_node":111111,
    "position": ,
    "status": ,
    
    "answers":[{
        "text": "答案一", 
        "comments":"cccc",
        "correct": true,
        "weight": 0.2,
        "position": ,
        "status": 
    },{
        "text": "答案2", 
        "comments":"cccc",
        "correct": true,
        "weight": 0.2,
        "position": ,
        "status": 
    }]
}
	at net.sf.json.util.JSONTokener.syntaxError(JSONTokener.java:499)
	at net.sf.json.util.JSONTokener.nextValue(JSONTokener.java:378)
	at net.sf.json.JSONObject._fromJSONTokener(JSONObject.java:1008)
	at net.sf.json.JSONObject._fromString(JSONObject.java:1201)
	at net.sf.json.JSONObject.fromObject(JSONObject.java:165)
	at net.sf.json.JSONObject.fromObject(JSONObject.java:134)
	at com.kaikeba.server.api.utils.HTTPRequestTest.run(HTTPRequestTest.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- net.sf.json.JSONException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- run -->
      </class> <!-- com.kaikeba.server.api.utils.HTTPRequestTest -->
    </test> <!-- ApiTest -->
  </suite> <!-- ApiTest -->
</testng-results>
